#!/bin/bash
###########################################
#<-запись конфигурации интерфейса в файл->#
###########################################
########
# IPv4 #
########
function select_interface_v4() 
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet static'
    addrv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $2 }' | sed 's/addr:/address /g') ; echo  -e ' \t ' $addrv4
    bcastv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $3 }' | sed 's/Bcast:/broadcast /g') ; echo  -e ' \t ' $bcastv4
    maskv4=$(ifconfig $iface | grep 'Mask' | awk '{ print $4 }' | sed 's/Mask:/netmask /g') ; echo -e ' \t ' $maskv4
}
##############
# IPv4 vlans #
##############
function select_interface_v4_vlan()
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet static'
    addrv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $2 }' | sed 's/addr:/address /g') ; echo  -e ' \t ' $addrv4
    bcastv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $3 }' | sed 's/Bcast:/broadcast /g') ; echo  -e ' \t ' $bcastv4
    maskv4=$(ifconfig $iface | grep 'Mask' | awk '{ print $4 }' | sed 's/Mask:/netmask /g') ; echo -e ' \t ' $maskv4
    ipv4vl=$(grep Device /proc/net/vlan/$iface | sed 's/Device: /vlan_raw_device /g') ; echo -e ' \t ' $ipv4vl
}
########
# IPv6 #
########
function select_interface_v6() 
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet6 static'
#>адреса<#
for i in $(grep  $iface$ /proc/net/if_inet6 | cut --output-delimiter=":" --characters=1-4,5-8,9-12,13-16,17-20,21-24,25-28,29-32);
  do echo -e ' \t ' address $i; 
done
# маски #
for i in $(grep  $iface$ /proc/net/if_inet6  | awk '{ print $3 } '); 
 do echo -e ' \t ' "netmask" $((16#$i)); 
done
}


##############
# IPv6 vlans #
##############
function select_interface_v6_vlan() 
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet6 static'
#>адреса<#
for i in $(grep $iface$ /proc/net/if_inet6 | cut --output-delimiter=":" --characters=1-4,5-8,9-12,13-16,17-20,21-24,25-28,29-32);
 do echo -e ' \t ' address $i; 
done
#>маски<#
for i in $(grep $iface$ /proc/net/if_inet6  | awk '{ print $3 } '); 
 do echo -e ' \t ' netmask $((16#$i)); 
done
    ipv6vl=$(grep Device /proc/net/vlan/$iface | sed 's/Device: /vlan_raw_device /g') ; echo -e ' \t ' $ipv6vl
}
###############
# IPv4 bridge #
###############
function  select_interface_v4_bridge()
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet static'
    biface4=$(ls /sys/class/net/$iface/brif/) ; echo -e ' \t ' "bridge_ports" $biface4
    addrv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $2 }' | sed 's/addr:/address /g') ; echo  -e ' \t ' $addrv4
    bcastv4=$(ifconfig $iface | grep 'inet addr' | awk '{ print $3 }' | sed 's/Bcast:/broadcast /g') ; echo  -e ' \t ' $bcastv4
    maskv4=$(ifconfig $iface | grep 'Mask' | awk '{ print $4 }' | sed 's/Mask:/netmask /g') ; echo -e ' \t ' $maskv4
    stp=$(brctl show $iface | awk '{ print $3 }' | egrep 'yes|no') ; echo -e ' \t ' bridge_stp $stp

}
###############
# IPv6 bridge #
###############
function  select_interface_v6_bridge()
{
    echo 'auto' $iface
    echo 'iface' $iface 'inet6 static'
    biface4=$(ls /sys/class/net/$iface/brif/) ; echo -e ' \t ' "bridge_ports" $biface4
    for i in $(grep  $iface /proc/net/if_inet6 | cut --output-delimiter=":" --characters=1-4,5-8,9-12,13-16,17-20,21-24,25-28,29-32);
 do echo -e ' \t ' address $i; 
done
# маски #
for i in $(grep $iface /proc/net/if_inet6  | awk '{ print $3 } '); 
 do echo -e ' \t ' "netmask" $((16#$i)); 
done
stp=$(brctl show $iface | awk '{ print $3 }' | egrep 'yes|no') ; echo -e ' \t ' bridge_stp $stp
}

function print_help()
{
  echo 'f' - ipv4 конфигурация интерфейса
  echo "auto eth0"
  echo "iface eth0 inet static"
  echo "       address aaa.bbb.ccc.ddd"
  echo "       broadcast aaa.bbb.ccc.ddd"
  echo "       netmask aaa.bbb.ccc.ddd"
  echo 's' - ipv6 конфигурация интерфейса
  echo "auto eth0"
  echo "iface eth0 inet6 static"
  echo "     address fe80:0000:0000:0000:0000:0000:0000:0001"
  echo "     netmask 64"
  echo 'b' - ipv4 конфигурация моста
  echo "auto br0"
  echo "iface br0 inet static"
  echo "       bridge_ports eth0.2 eth0.3"
  echo "       address aaa.bbb.ccc.ddd"
  echo "       broadcast aaa.bbb.ccc.ddd"
  echo "       netmask aaa.bbb.ccc.ddd"
  echo "       bridge_stp yes"
  echo 'c' - ipv4 конфигурация моста, выдает с 
  echo "auto br0"
  echo "iface br0 inet6 static"
  echo "       bridge_ports eth0.2 eth0.3"
  echo "       address fe80:0000:0000:0000:faa9:63ff:fe98:1a17"
  echo "       address 2001:0db8:0000:0000:0000:0000:0000:0001"
  echo "       netmask 64"
  echo "       netmask 64"
  echo "       bridge_stp yes"
} 
function null()
{ 
 echo "введите -h для справки"
}
################
# Выбор опций  #
################
while getopts ":f:s:h:b:c:" optname
  do
    case "$optname" in
      
      "f") 
      
          ########
	  # IPv4 #
	  ########
          iface=$OPTARG
          I=`echo $iface | egrep '\.|vlan'`
          
          if [ -n "$I" ]
            
            then  
         
	  select_interface_v4_vlan >&2
            
            else    
         
	  select_interface_v4 >&2
         
         fi
        ;;
      
      "s") 
          
          ########
	  # IPv6 #
	  ########
          iface=$OPTARG
	  I=`echo $iface | egrep '\.|vlan'`
       
	  if [ -n "$I" ]
        
            then
	  
	  select_interface_v6_vlan >&2
          
	    else
	  
	  select_interface_v6 >&2
        
	  fi
        ;;
         "b") 
          
          ##########
	  # IPv4br #
	  ##########
          iface=$OPTARG
	   select_interface_v4_bridge >&2
        ;;
        "c") 
          
          ##########
	  # IPv6br #
	  ##########
          iface=$OPTARG
	   select_interface_v6_bridge >&2
        ;;
       h) 
	    ######
	    #help#
	    ######
        
        ;;
	    
       *)
      ##########################
      # Соответствий не найдено#
      ##########################
           print_help >&2
        ;;
    esac
  done


