# Протокол STP предотвращает возникновение циклов благодаря тому, что все порты каждого коммутатора или моста 
# переводятся в состояние пересылки или в состояние блокировки. (forwarding,block(FWD;BLK))
# Форвардинг порты работают в обычном режиме, заблокированные порты не пересылают
# никаких фреймов, кроме сообщений протокола STP.
# Идентификатор моста BID(bridge id)
# 2 байтовое поле приоритета и 6 байтовое поле идентификатора. системный индентификатор формируется на основе MAC-адреса коммутатора.
# Выбор корневого коммутатора 
#все коммутаторы посылают hello bpdu, пока не получат лучший(более низкий) BID от другого коммутатора. 
# если приоритет одинаков то берется более низкое значение поля идентификатора(MAC).
пример   SW1 32769:0200.0000.0001
	 SW2 32769:0200.0000.0002
	 SW3 32779:0200.0000.0003
SW1 будет корневым.
# После выбора root, только root-коммутатор посылает Hello-BPDU, другие коммутаторы
#получают пакеты , обновляют поле идентификатора моста-опртавителя и поле с 
#указанием стоимости достижения рута, после чего перенаправляют hello-пакеты через другие интерфейсы.

# Выбор корневого порта каждого коммутатора.
# Каждый коммутатор выбирает только один корневой порт, он является
# портом стоимость маршрута к корневому порту которого является наименьшей.
# Вычисляя эту стоимость, коммутатор складывает стоимость указанную в полученном
# Hello bpdu, со стоимостью порта STP, назначенной интерфейсу через который получен пакет.

Стандартная стоимость порта в соответствии со стандартом IEEE
10 Mbit\s 100
100 Mbit\s 19
1   Gbit\s  4
10  Gbit\s  2 
# Стоимости складываются в колцевой топологии, наибольшая стоимость на интерфейсе ставит его в блокирующий режим.

Функционирование сети в устойчивом состоянии, пакеты посылаются каждые 2 секунды:
1. Корневой коммутатор создает и отправляет пакет Hello BPDU со стоимостью 0 через все свои рабочие интерфейсы(FWD).
2. Некорневые коммутаторы получают Hello BPDU через свои корневые порты. После внесения изменений стоимости и собственного идентификатора моста-отправителя, этот коммутатор отправляет пакет через все выделенные порты.
3. Этапы 1 и 2 повторяются до тех пор, пока топология сети остается неизменной.

пока пакеты hello приходят от корневого коммутатора топология сети является рабочей.
после того как прекращается поступления пакетов hello к какому-то коммутатору, эта ситуация рассматривается как свидетельство о нарушении в работе, на которое коммутатор реагирует и запускает процесс изменения
топологии stp.
начинается процесс согласования, в котором приходится применять три таймера, таймеры используются так как указывает корневой коммутатор, он переодически рассылает информацию в пакетах HELLO
# Таймеры stp
hello-таймер 2 секунды интервал рассылки hello пакетов
Max Age  10x(hello-таймер)=(Max Age) Время в течении которого любой коммутатор должен ожидать прекращения получения hello и после истечении придпринимать попытку изменения топологии STP
Задержка пересылки 15 sec Задержка от которой зависит процесс, происходящий после перехода интерфейса в состоянии FWD из BLK, порт остаётся в состоянии прослушивания, а затем переходит в промежуточное состоянии самообучешие на 15 сек.




Для предотвращения возможности возниновения кольцевых маршрутов в протоколе STP предусмотрен переход интерфейса через два промежуточных состояния интерфейса:
- прослушивание. Как и в состоянии блокирование, интерфейс не перенаправляет фреймы. В состоянии прослушивания происходит
уничтожение старых записей в MAC таплице, ставших неправильными, поскольку основной причиной временных кольцевых маршрутов как раз и
является наличие устаревших не соответствующих действительности записей таблицы MAC-адресов.
- самообучение. Интерфейсы в этом состоянии всё еще не перенаправляют фреймы, но коммутатор начинает накапливать информацию о MAC- адресах
фреймов полученных через интерфейс.
# Из этого приходит мысль о выводе - если один линк пропадает, резервный поднимится через (hello-timer * max-age) + listening + learning = 50 sec

